{
	"info": {
		"_postman_id": "599da350-a502-4893-be2b-56e3749756ac",
		"name": "Feature Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user1@user.com');",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Author');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Author\",\n    \"email\": \"user1@user.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Other User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email, '\"email\" field').to.eql('user2@user.com');",
							"    pm.expect(jsonData.name, '\"name\" field').to.eql('Other User');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Other User\",\n    \"email\": \"user2@user.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Какая-то категория\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/admin/categories",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"annotation\": \"Какое-то событие\",\n    \"title\": \"Очень интересное\",\n    \"description\": \"Оставляйте комментарии\",\n    \"eventDate\": \"2023-12-04 23:19:54\",\n    \"location\": {\n        \"lat\": 800.0,\n        \"lon\": 399.0\n    },\n    \"category\": 1,\n    \"paid\": false,\n    \"participantLimit\": 0,\n    \"requestModeration\": false\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Create Comment - Wrong Event State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу, когда событие опубликуют\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/admin/events/:eventId/publish",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						":eventId",
						"publish"
					],
					"variable": [
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create comment 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Обязательно схожу теперь, когда событие опубликовали');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Comment 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Обязательно схожу теперь, когда событие опубликовали, это пишет мое альтер эго');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали, это пишет мое альтер эго\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Create Comment - Empty Text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Create Comment - Wrong Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу, когда событие опубликуют\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "eventId",
							"value": "9874"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Create Comment - Wrong User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу, когда событие опубликуют\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/:eventId/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						":eventId",
						"comments"
					],
					"variable": [
						{
							"key": "userId",
							"value": "9573"
						},
						{
							"key": "eventId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Comment 1 By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test correct comment\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Обязательно схожу теперь, когда событие опубликовали');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "comId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Event's Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test correct comments\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length, 'comments count in total').to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/:id/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id",
						"comments"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Event With Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test correct event with comments\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commentsList.length, 'comments count in total').to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Comment 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test create user\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Обязательно схожу теперь, когда событие опубликовали, но могу и передумать');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали, но могу и передумать\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "comId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Edit Comment - Wrong User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали, но могу и передумать, ахаха\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "2"
						},
						{
							"key": "comId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Edit Comment - Same Text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([409]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали, это пишет мое альтер эго\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "comId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Edit Comment - Wrong Comment ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Обязательно схожу теперь, когда событие опубликовали, это пишет мое альтер эго, или нет\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "comId",
							"value": "900"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Comment 1 By Id After Editing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test correct comment after edit\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.text, '\"text\" field').to.eql('Обязательно схожу теперь, когда событие опубликовали, но могу и передумать');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "comId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Get Comment By Id - Wrong Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([404]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "comId",
							"value": "900"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Empty Event's Comments - Wrong Event Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Test correct event with comments\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length, 'comments count in total').to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/:id/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id",
						"comments"
					],
					"variable": [
						{
							"key": "id",
							"value": "900"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Comment 1 By Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "1"
						},
						{
							"key": "comId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Delete Comment 2 By Wrong User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/users/:userId/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						":userId",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "2"
						},
						{
							"key": "comId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Comment 2 By Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/admin/events/comments/:comId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"events",
						"comments",
						":comId"
					],
					"variable": [
						{
							"key": "comId",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Event After Deleting Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"pm.test(\"Test correct event with comments\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commentsList.length, 'comments count in total').to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Accept",
						"value": "*/*",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/events/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"events",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "default"
		}
	]
}